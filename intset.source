CREATE OR REPLACE FUNCTION intset_in(cstring)
   RETURNS intset
   AS '_OBJWD_/intset'
   LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION intset_out(intset)
   RETURNS cstring
   AS '_OBJWD_/intset'
   LANGUAGE C IMMUTABLE STRICT;


CREATE TYPE intset (
   internallength = VARIABLE,
   input = intset_in,
   output = intset_out,
   alignment = int4,
   storage = extended
);


-----------------------------
-- Using the new type:
--  user-defined types can be used like ordinary built-in types.
-----------------------------

-- eg. we can use it in a table

CREATE TABLE test_intset (
  a intset
);

-- data for user-defined types are just strings in the proper textual
-- representation.

INSERT INTO test_intset VALUES ('{1,2,3,4,5}');

SELECT * FROM test_intset;


--create table Features (
--   id INTEGER primary key,
--   name text
--);
--
--create table DBSystems (
--    name text,
--    features intSet
--);
--
--insert into Features (id, name) values
--    (1, 'well designed'),
--    (2, 'efficient'),
--    (3, 'flexible'),
--    (4, 'robust');
--
--
--insert into DBSystems (name, features) values
--    ('MySQL', '{}'),
--    ('MongoDB', '{}'),
--    ('Oracle', '{2,4}'),
--    ('PostgreSQL', '{1,2,3,4}');
--
--select * from DBSystems;
--select * from Features;

-- clean up the example
 DROP TABLE test_intset;
 --DROP TABLE DBSystems;
 --DROP TABLE Features;
 DROP TYPE intset CASCADE;
